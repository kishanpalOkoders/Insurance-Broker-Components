{"ast":null,"code":"var _jsxFileName = \"/Users/kpsaini/Desktop/Insurance-cmp/src/Components/Insurer/UploadAttachedment.web.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { makeStyles, Grid, FormLabel, TextField, InputAdornment } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport LabelWithIcon from '../LabelWithIcon';\nimport ConfirmationDialog from '../ConfirmationDialog.web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  cmpWrapper: {\n    backgroundColor: '#fff',\n    padding: '30px',\n    '& legend': {\n      textAlign: 'left',\n      marginBottom: '10px',\n      display: 'flex',\n      fontSize: '14px',\n      // color: '#d0d0d0',\n      color: '#3d3d3d',\n      '& svg': {\n        fontSize: '15px',\n        color: '#222',\n        marginLeft: '6px'\n      }\n    }\n  },\n  uploadedDoc: {\n    '& input': {\n      color: '#7f7f7f'\n    }\n    // style={{color: '#7f7f7f'}}\n  },\n\n  classBenefits: {\n    width: '60%',\n    display: 'block'\n  },\n  inputFile: {\n    // '& input[type=\"file\"]::file-selector-button':{\n    //     display: 'none',\n    // },\n    color: '#7f7f7f',\n    '& fieldset': {\n      border: '1px dashed rgba(0, 0, 0, 0.23) !important'\n    },\n    '& > div': {\n      height: '40px',\n      overflow: 'hidden'\n    },\n    '& input': {\n      opacity: '0',\n      position: 'absolute',\n      left: '0px',\n      right: '0px',\n      maxWidth: '75%'\n    },\n    '& .MuiInputAdornment-positionEnd': {\n      marginLeft: 'auto',\n      position: 'absolute',\n      right: '0px',\n      '& > *': {\n        background: '#fff'\n      }\n    }\n  }\n});\nconst enumUploadAttachedment = {\n  name: 'name',\n  comment: 'comment'\n};\nconst enumFormAction = {\n  ADD: 'ADD',\n  EDIT: 'EDIT',\n  VIEW: 'VIEW'\n};\nconst UploadAttachedment = props => {\n  _s();\n  var _props$data, _props$data$insurance, _props$data2, _props$data3, _props$data3$insuranc;\n  const classes = useStyles();\n  const [selectedimageName, setSelectedimageName] = useState();\n  const [imgUrl, setImgUrl] = useState();\n  const [dialogState, setDialogState] = useState({\n    openConfirmationDialog: false,\n    dialogItemIndex: 0,\n    headingText: '',\n    paragraphText: ''\n  });\n\n  // const handelImageUpload = async (e: any) => {\n\n  //     // dispatch(imageUploade('reset'))\n  //     const target = e.target\n  //     const imageFile = await e.target.files[0]\n  //     if (imageFile) {\n  //         const options = {\n  //             maxSizeMB: 10,\n  //             maxWidthOrHeight: 1920,\n  //             useWebWorker: true\n  //         }\n\n  //         try {\n  //             const compressedFile = await imageCompression(imageFile, options);\n  //             console.log('target.value :', e, imageFile, compressedFile)\n  //             console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\n  //             console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\n  //             /*Maximum allowed size in bytes\n  //               5MB Example\n  //               Change first operand(multiplier) for your needs*/\n  //             const maxAllowedSize = 10 * 1024 * 1024;\n  //             if (compressedFile.size > maxAllowedSize) {\n  //                 alert(\"Reduce the file size !\")\n  //                 // Here you can ask your users to load correct file\n  //                 target.value = ''\n  //             } else {\n  //                 setSelectedimageName(compressedFile?.name)\n  //                 setImgUrl(URL.createObjectURL(imageFile))\n  //                 //   setUploadImageUpdate(true)\n  //                 //   formik.handleChange(e)\n  //                 //   dispatch(imageUploade(imageFile))\n  //                 //   setLoading(false)\n  //             }\n\n  //             // await uploadToServer(compressedFile); // write your own logic\n  //         } catch (error) {\n  //             console.log(error);\n  //         }\n\n  //     }\n  // }\n\n  const handleCancelImage = () => {\n    setSelectedimageName('');\n    setImgUrl('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.cmpWrapper,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: [\"Upload attachment \", /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"\",\n          variant: \"outlined\",\n          fullWidth: true,\n          name: \"insuranceClass\"\n          //   onBlur={(e:any) => props.insuranceUpdate(props.data?.label, e.target.value)}\n          // onChange={(e: any) => {\n          //     // props.insuranceUpdate(props.data?.label, e.target.value)\n          //     // setInputData(e.target.value)\n          // }}\n          ,\n          size: \"small\"\n          // placeholder='hdf.pdf'\n          ,\n          inputProps: {\n            readOnly: true\n          },\n          className: classes.uploadedDoc,\n          value: props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$insurance = _props$data.insurance_document) === null || _props$data$insurance === void 0 ? void 0 : _props$data$insurance.name,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  color: '#1c1c1c',\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                href: URL.createObjectURL(props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.insurance_document),\n                download: true,\n                children: [\" \", /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 178\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => {\n                  // props.removeDoc\n                  setDialogState(prevState => ({\n                    ...prevState,\n                    headingText: 'Delete Attachment',\n                    paragraphText: 'Are you sure want to delete this Attachment?',\n                    openConfirmationDialog: true\n                  }));\n                  // this.setState({dialogItemIndex: index })\n                  // this.setState({headingText: 'Delete Class' })\n                  // this.setState({paragraphText: 'Are you sure want to delete this class?' })\n                  // this.setState({openConfirmationDialog: true })\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this),\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this),\n            readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(LabelWithIcon, {\n          label: \"Document name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"\",\n          variant: \"outlined\",\n          fullWidth: true,\n          name: \"docName\",\n          value: props === null || props === void 0 ? void 0 : (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : (_props$data3$insuranc = _props$data3.insurance_document) === null || _props$data3$insuranc === void 0 ? void 0 : _props$data3$insuranc.name\n          //   onBlur={(e:any) => props.insuranceUpdate(props.data?.label, e.target.value)}\n          ,\n          onChange: e => props === null || props === void 0 ? void 0 : props.eventChange(e.target.value, enumUploadAttachedment.name),\n          size: \"small\",\n          InputProps: {\n            readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(LabelWithIcon, {\n          label: \"Comment (if any)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"\",\n          variant: \"outlined\",\n          fullWidth: true,\n          name: \"comment\"\n          //   onBlur={(e:any) => props.insuranceUpdate(props.data?.label, e.target.value)}\n          ,\n          onChange: e => props === null || props === void 0 ? void 0 : props.eventChange(e.target.value, enumUploadAttachedment.comment),\n          size: \"small\",\n          InputProps: {\n            readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      btnCancelText: \"Cancel\",\n      btnOkText: \"Delete\",\n      openDialog: dialogState === null || dialogState === void 0 ? void 0 : dialogState.openConfirmationDialog,\n      headingText: dialogState === null || dialogState === void 0 ? void 0 : dialogState.headingText,\n      paragraphText: dialogState === null || dialogState === void 0 ? void 0 : dialogState.paragraphText,\n      handleOk: () => {\n        // this.handleContactCancel(this.state.dialogItemIndex);\n        props.removeDoc();\n        setDialogState(prevState => ({\n          ...prevState,\n          openConfirmationDialog: false\n        }));\n      },\n      handleCancel: () => {\n        setDialogState(prevState => ({\n          ...prevState,\n          openConfirmationDialog: false\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadAttachedment, \"E2qN3IvFGYK3Rd+Wgik32nJU7sU=\", false, function () {\n  return [useStyles];\n});\n_c = UploadAttachedment;\nexport default UploadAttachedment;\nvar _c;\n$RefreshReg$(_c, \"UploadAttachedment\");","map":{"version":3,"names":["React","useState","makeStyles","Grid","FormLabel","TextField","InputAdornment","ErrorIcon","GetAppIcon","CloseIcon","InsertDriveFileIcon","LabelWithIcon","ConfirmationDialog","jsxDEV","_jsxDEV","useStyles","cmpWrapper","backgroundColor","padding","textAlign","marginBottom","display","fontSize","color","marginLeft","uploadedDoc","classBenefits","width","inputFile","border","height","overflow","opacity","position","left","right","maxWidth","background","enumUploadAttachedment","name","comment","enumFormAction","ADD","EDIT","VIEW","UploadAttachedment","props","_s","_props$data","_props$data$insurance","_props$data2","_props$data3","_props$data3$insuranc","classes","selectedimageName","setSelectedimageName","imgUrl","setImgUrl","dialogState","setDialogState","openConfirmationDialog","dialogItemIndex","headingText","paragraphText","handleCancelImage","className","children","container","spacing","item","xs","sm","component","fileName","_jsxFileName","lineNumber","columnNumber","id","label","variant","fullWidth","size","inputProps","readOnly","value","data","insurance_document","InputProps","endAdornment","style","alignItems","href","URL","createObjectURL","download","cursor","onClick","prevState","startAdornment","formType","onChange","e","eventChange","target","btnCancelText","btnOkText","openDialog","handleOk","removeDoc","handleCancel","_c","$RefreshReg$"],"sources":["/Users/kpsaini/Desktop/Insurance-cmp/src/Components/Insurer/UploadAttachedment.web.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles, Grid, FormLabel, TextField, InputAdornment } from '@material-ui/core';\r\nimport imageCompression from 'browser-image-compression';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport LabelWithIcon from '../LabelWithIcon'\r\nimport ConfirmationDialog from '../ConfirmationDialog.web';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    cmpWrapper: {\r\n        backgroundColor: '#fff',\r\n        padding: '30px',\r\n        '& legend': {\r\n            textAlign: 'left',\r\n            marginBottom: '10px',\r\n            display: 'flex',\r\n            fontSize: '14px',\r\n            // color: '#d0d0d0',\r\n            color: '#3d3d3d',\r\n            '& svg': {\r\n                fontSize: '15px',\r\n                color: '#222',\r\n                marginLeft: '6px',\r\n            }\r\n        }\r\n    },\r\n    uploadedDoc: {\r\n        '& input': {\r\n            color: '#7f7f7f'\r\n        }\r\n        // style={{color: '#7f7f7f'}}\r\n    },\r\n    classBenefits: {\r\n        width: '60%',\r\n        display: 'block'\r\n    },\r\n    inputFile: {\r\n        // '& input[type=\"file\"]::file-selector-button':{\r\n        //     display: 'none',\r\n        // },\r\n        color: '#7f7f7f',\r\n        '& fieldset': {\r\n            border: '1px dashed rgba(0, 0, 0, 0.23) !important'\r\n        },\r\n        '& > div': {\r\n            height: '40px',\r\n            overflow: 'hidden',\r\n        },\r\n        '& input': {\r\n            opacity: '0',\r\n            position: 'absolute',\r\n            left: '0px',\r\n            right: '0px',\r\n            maxWidth: '75%',\r\n        },\r\n        '& .MuiInputAdornment-positionEnd': {\r\n            marginLeft: 'auto',\r\n            position: 'absolute',\r\n            right: '0px',\r\n            '& > *': {\r\n                background: '#fff',\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nconst enumUploadAttachedment = {\r\n    name: 'name',\r\n    comment: 'comment',\r\n}\r\n\r\ntype documentUploadType = {\r\n    name: string,\r\n    comment: string,\r\n    insurance_document: any,\r\n}\r\n\r\n\r\ntype UploadAttachedmentProps = {\r\n    data: documentUploadType,\r\n    eventChange: any,\r\n    formType: string,\r\n    removeDoc: () => void,\r\n}\r\n\r\nconst enumFormAction = {\r\n    ADD: 'ADD',\r\n    EDIT: 'EDIT',\r\n    VIEW: 'VIEW',\r\n}\r\n\r\nconst UploadAttachedment = (props: UploadAttachedmentProps) => {\r\n    const classes = useStyles();\r\n    const [selectedimageName, setSelectedimageName] = useState<string>()\r\n    const [imgUrl, setImgUrl] = useState<string>()\r\n    const [dialogState, setDialogState] = useState({\r\n        openConfirmationDialog: false,\r\n        dialogItemIndex: 0,\r\n        headingText: '',\r\n        paragraphText: '',\r\n    })\r\n\r\n\r\n    // const handelImageUpload = async (e: any) => {\r\n\r\n    //     // dispatch(imageUploade('reset'))\r\n    //     const target = e.target\r\n    //     const imageFile = await e.target.files[0]\r\n    //     if (imageFile) {\r\n    //         const options = {\r\n    //             maxSizeMB: 10,\r\n    //             maxWidthOrHeight: 1920,\r\n    //             useWebWorker: true\r\n    //         }\r\n\r\n    //         try {\r\n    //             const compressedFile = await imageCompression(imageFile, options);\r\n    //             console.log('target.value :', e, imageFile, compressedFile)\r\n    //             console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\r\n    //             console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\r\n    //             /*Maximum allowed size in bytes\r\n    //               5MB Example\r\n    //               Change first operand(multiplier) for your needs*/\r\n    //             const maxAllowedSize = 10 * 1024 * 1024;\r\n    //             if (compressedFile.size > maxAllowedSize) {\r\n    //                 alert(\"Reduce the file size !\")\r\n    //                 // Here you can ask your users to load correct file\r\n    //                 target.value = ''\r\n    //             } else {\r\n    //                 setSelectedimageName(compressedFile?.name)\r\n    //                 setImgUrl(URL.createObjectURL(imageFile))\r\n    //                 //   setUploadImageUpdate(true)\r\n    //                 //   formik.handleChange(e)\r\n    //                 //   dispatch(imageUploade(imageFile))\r\n    //                 //   setLoading(false)\r\n    //             }\r\n\r\n    //             // await uploadToServer(compressedFile); // write your own logic\r\n    //         } catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n\r\n    //     }\r\n    // }\r\n\r\n    const handleCancelImage = () => {\r\n        setSelectedimageName('')\r\n        setImgUrl('')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.cmpWrapper}>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4}>\r\n                    <FormLabel component=\"legend\">Upload attachment <ErrorIcon /></FormLabel>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"insuranceClass\"\r\n                        //   onBlur={(e:any) => props.insuranceUpdate(props.data?.label, e.target.value)}\r\n                        // onChange={(e: any) => {\r\n                        //     // props.insuranceUpdate(props.data?.label, e.target.value)\r\n                        //     // setInputData(e.target.value)\r\n                        // }}\r\n                        size='small'\r\n                        // placeholder='hdf.pdf'\r\n                        inputProps={{ readOnly: true }}\r\n                        className={classes.uploadedDoc}\r\n                        value={props?.data?.insurance_document?.name}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <a style={{ color: '#1c1c1c', display: 'flex', alignItems: 'center' }} href={URL.createObjectURL(props?.data?.insurance_document)} download> <GetAppIcon /></a>\r\n                                    <CloseIcon style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        // props.removeDoc\r\n                                        setDialogState((prevState) => ({\r\n                                            ...prevState,\r\n                                            headingText: 'Delete Attachment',\r\n                                            paragraphText: 'Are you sure want to delete this Attachment?',\r\n                                            openConfirmationDialog: true\r\n                                        }))\r\n                                        // this.setState({dialogItemIndex: index })\r\n                                        // this.setState({headingText: 'Delete Class' })\r\n                                        // this.setState({paragraphText: 'Are you sure want to delete this class?' })\r\n                                        // this.setState({openConfirmationDialog: true })\r\n                                    }} />\r\n                                </InputAdornment>\r\n                            ),\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <InsertDriveFileIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                            readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <LabelWithIcon label='Document name' />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"docName\"\r\n                        value={props?.data?.insurance_document?.name}\r\n                        //   onBlur={(e:any) => props.insuranceUpdate(props.data?.label, e.target.value)}\r\n                        onChange={(e: any) => props?.eventChange(e.target.value, enumUploadAttachedment.name)}\r\n                        size='small'\r\n                        InputProps={{\r\n                         readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <LabelWithIcon label='Comment (if any)' />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"comment\"\r\n                        //   onBlur={(e:any) => props.insuranceUpdate(props.data?.label, e.target.value)}\r\n                        onChange={(e: any) => props?.eventChange(e.target.value, enumUploadAttachedment.comment)}\r\n                        size='small'\r\n                        InputProps={{\r\n                         readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            <ConfirmationDialog\r\n                btnCancelText='Cancel'\r\n                btnOkText='Delete'\r\n                openDialog={dialogState?.openConfirmationDialog}\r\n                headingText={dialogState?.headingText}\r\n                paragraphText={dialogState?.paragraphText}\r\n                handleOk={() => {\r\n                    // this.handleContactCancel(this.state.dialogItemIndex);\r\n                    props.removeDoc();\r\n                    setDialogState((prevState) => ({\r\n                        ...prevState,\r\n                        openConfirmationDialog: false\r\n                    }))\r\n                }}\r\n                handleCancel={() => {\r\n                    setDialogState((prevState) => ({\r\n                        ...prevState,\r\n                        openConfirmationDialog: false\r\n                    }))\r\n                }}\r\n            />\r\n\r\n            {/* <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4} style={{paddingTop: '30px'}}>\r\n                    <LabelWithIcon label='Additional attechment' />\r\n                <TextField\r\n                        label=\"\"\r\n                        id=\"image-upload\"\r\n                        name='image'\r\n                        size=\"small\"\r\n                        type='file'\r\n                        variant=\"outlined\"\r\n                        hidden\r\n                        fullWidth\r\n                        inputProps={{\r\n                            // accept:\r\n                            //   \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\r\n                            accept:\r\n                                \".png,.JPG,.JPEG,.pdf\",\r\n                        }}\r\n                        placeholder=\"hbjbjhbhjbjbjhbhjb\"\r\n                        InputProps={{\r\n                            // endAdornment: (\r\n                            //     //   <InputAdornment position='start' sx={{ position: 'absolute', left: '2px', top: '18px', }}>\r\n                            //     //     {\r\n                            //     //       cmp !== 'add' && editValues !== null && editValues !== undefined && uploadImageUpdate === false ? <img style={{ width: '25px', height: '25px' }} src={formik.values.image} alt=\"\" /> : ''\r\n                            //     //     }\r\n                            //     //   </InputAdornment>\r\n                            //     <InputAdornment position=\"end\">\r\n                            //         <a style={{ color: '#212121' }} href={imgUrl} download> <GetAppIcon /></a>  <CloseIcon />\r\n                            //     </InputAdornment>\r\n                            // ),\r\n                            startAdornment: (\r\n                                //   <InputAdornment position='start' sx={{ position: 'absolute', left: '2px', top: '18px', }}>\r\n                                //     {\r\n                                //       cmp !== 'add' && editValues !== null && editValues !== undefined && uploadImageUpdate === false ? <img style={{ width: '25px', height: '25px' }} src={formik.values.image} alt=\"\" /> : ''\r\n                                //     }\r\n                                //   </InputAdornment>\r\n                                <InputAdornment position=\"start\">\r\n                                    <div style={{ color: 'rgba(0, 0, 0, 0.23)' }}>Upload another attachment</div>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        title=\"Choose a photo please\"\r\n                        className={classes.inputFile}\r\n                        //   className={cmp !== 'add' ? 'removeBorder customPadding' : 'removeBorder '}\r\n                        // value={formik.values.image}\r\n                        onChange={handelImageUpload}\r\n                    //   error={formik.touched.image && Boolean(formik.errors.image)}\r\n                    //   helperText={formik.touched.image && formik.errors.image}\r\n                    />\r\n                </Grid>\r\n            </Grid> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadAttachedment"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}