{"ast":null,"code":"var _jsxFileName = \"/Users/kpsaini/Desktop/Insurance-cmp/src/Components/Insurer/MedicalInsurance.web.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, makeStyles, TextField } from '@material-ui/core';\nimport LabelWithIcon from '../LabelWithIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  cmpWrapper: {\n    backgroundColor: '#fff',\n    padding: '30px',\n    '& legend': {\n      textAlign: 'left',\n      marginBottom: '10px',\n      display: 'flex',\n      fontSize: '14px',\n      // color: '#d0d0d0',\n      color: '#3d3d3d',\n      '& svg': {\n        fontSize: '15px',\n        color: '#222',\n        marginLeft: '6px'\n      }\n    }\n  },\n  classBenefits: {\n    width: '60%',\n    display: 'block'\n  }\n});\nconst enumFormAction = {\n  ADD: 'ADD',\n  EDIT: 'EDIT',\n  VIEW: 'VIEW'\n};\nconst MedicalInsurance = props => {\n  _s();\n  var _props$data4, _props$data6;\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  const [errors, setErrors] = useState({\n    insuranceClass: false,\n    classBenefits: false\n  });\n  useEffect(() => {\n    setCount(count + 1);\n    if (count) {\n      var _props$data, _props$data2;\n      const temp = {\n        ...errors\n      };\n      if ((props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.insurance_class) === '') {\n        temp['insuranceClass'] = true;\n      }\n      if ((props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.class_benefits) === '') {\n        temp['classBenefits'] = true;\n      }\n      setErrors(temp);\n    }\n  }, [props.submitEvent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.cmpWrapper,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(LabelWithIcon, {\n          label: 'Insurance Class'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"\",\n          variant: \"outlined\",\n          fullWidth: true,\n          name: \"insuranceClass\",\n          placeholder: \"VVIP\",\n          onChange: e => {\n            var _props$data3;\n            props.addInsuranceClassData(e.target.value);\n            if ((props === null || props === void 0 ? void 0 : (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.insurance_class) === '') {\n              const temp = {\n                ...errors\n              };\n              temp['insuranceClass'] = true;\n              setErrors(temp);\n            } else {\n              const temp = {\n                ...errors\n              };\n              temp['insuranceClass'] = false;\n              setErrors(temp);\n            }\n          }\n          // onBlur={(e: any) => {\n          //     // props.insuranceUpdate(props.data?.label, e.target.value)\n          //     // setInputData(e.target.value)\n          // }}\n          ,\n          value: props === null || props === void 0 ? void 0 : (_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.insurance_class,\n          error: errors['insuranceClass']\n          //   helperText={formik.touched.iban && formik.errors.iban}\n          ,\n          size: \"small\",\n          required: true,\n          InputProps: {\n            readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: [/*#__PURE__*/_jsxDEV(LabelWithIcon, {\n          label: 'Class Benefits'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"\",\n          variant: \"outlined\",\n          fullWidth: true,\n          name: \"classBenefits\",\n          placeholder: \"-Network name VVIP&\\r -Max limit SAR 500,000\\r -out patient 20% MAX 75\\r -Room REG SUIT \\r -Dental SAR 2,000\\r -Optical SAR 400\\r -Matenity SAR 15,000\",\n          className: classes.classBenefits,\n          onChange: e => {\n            var _props$data5;\n            props.addClassBenefitsData(e.target.value);\n            if ((props === null || props === void 0 ? void 0 : (_props$data5 = props.data) === null || _props$data5 === void 0 ? void 0 : _props$data5.class_benefits) === '') {\n              const temp = {\n                ...errors\n              };\n              temp['classBenefits'] = true;\n              setErrors(temp);\n            } else {\n              const temp = {\n                ...errors\n              };\n              temp['classBenefits'] = false;\n              setErrors(temp);\n            }\n          },\n          value: props === null || props === void 0 ? void 0 : (_props$data6 = props.data) === null || _props$data6 === void 0 ? void 0 : _props$data6.class_benefits,\n          error: errors['classBenefits']\n          // onBlur={(e: any) => {\n          //     // props.insuranceUpdate(props.data?.label, e.target.value)\n          //     // setInputData(e.target.value)\n          // }}\n          ,\n          size: \"small\",\n          multiline: true,\n          required: true,\n          rows: 7,\n          InputProps: {\n            readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(MedicalInsurance, \"WxugMA7E+lC68H4Yn27N4dDm/KY=\", false, function () {\n  return [useStyles];\n});\n_c = MedicalInsurance;\nexport default MedicalInsurance;\nvar _c;\n$RefreshReg$(_c, \"MedicalInsurance\");","map":{"version":3,"names":["React","useEffect","useState","Grid","makeStyles","TextField","LabelWithIcon","jsxDEV","_jsxDEV","useStyles","cmpWrapper","backgroundColor","padding","textAlign","marginBottom","display","fontSize","color","marginLeft","classBenefits","width","enumFormAction","ADD","EDIT","VIEW","MedicalInsurance","props","_s","_props$data4","_props$data6","classes","count","setCount","errors","setErrors","insuranceClass","_props$data","_props$data2","temp","data","insurance_class","class_benefits","submitEvent","className","children","container","spacing","item","xs","sm","label","fileName","_jsxFileName","lineNumber","columnNumber","id","variant","fullWidth","name","placeholder","onChange","e","_props$data3","addInsuranceClassData","target","value","error","size","required","InputProps","readOnly","formType","_props$data5","addClassBenefitsData","multiline","rows","_c","$RefreshReg$"],"sources":["/Users/kpsaini/Desktop/Insurance-cmp/src/Components/Insurer/MedicalInsurance.web.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { FormLabel, Grid, makeStyles, TextField } from '@material-ui/core'\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport LabelWithIcon from '../LabelWithIcon'\r\n\r\nconst useStyles = makeStyles({\r\n    cmpWrapper: {\r\n        backgroundColor: '#fff',\r\n        padding: '30px',\r\n        '& legend': {\r\n            textAlign: 'left',\r\n            marginBottom: '10px',\r\n            display: 'flex',\r\n            fontSize: '14px',\r\n            // color: '#d0d0d0',\r\n            color: '#3d3d3d',\r\n            '& svg': {\r\n                fontSize: '15px',\r\n                color: '#222',\r\n                marginLeft: '6px',\r\n            }\r\n        }\r\n    },\r\n    classBenefits: {\r\n        width: '60%',\r\n        display: 'block'\r\n    }\r\n})\r\n\r\nconst enumFormAction = {\r\n    ADD: 'ADD',\r\n    EDIT: 'EDIT',\r\n    VIEW: 'VIEW',\r\n}\r\n\r\ntype medicalInsuranceDataType = {\r\n    insurance_class: string,\r\n    class_benefits: string,\r\n}\r\n\r\ntype MedicalInsuranceType = {\r\n    addInsuranceClassData: (data: string) => void,\r\n    addClassBenefitsData: (data: string) => void,\r\n    data: medicalInsuranceDataType,\r\n    submitEvent: boolean,\r\n    formType: string,\r\n}\r\n\r\n\r\n\r\nconst MedicalInsurance = (props: MedicalInsuranceType) => {\r\n    const classes = useStyles(); \r\n    const [count, setCount] = useState(0)\r\n    const [errors, setErrors] = useState({\r\n        insuranceClass: false,\r\n        classBenefits: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        setCount(count+1)\r\n        if (count) {\r\n            const temp = { ...errors };\r\n            if (props?.data?.insurance_class === '') {\r\n                temp['insuranceClass'] = true;\r\n            }\r\n            if (props?.data?.class_benefits === '') {\r\n                temp['classBenefits'] = true;\r\n            }\r\n            setErrors(temp)\r\n        }\r\n    }, [props.submitEvent])\r\n\r\n\r\n    return (\r\n        <div className={classes.cmpWrapper}>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4}>\r\n                        <LabelWithIcon label={'Insurance Class'} />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"insuranceClass\"\r\n                        placeholder='VVIP'\r\n                        onChange={(e: any) => {\r\n                            props.addInsuranceClassData(e.target.value)\r\n                            if (props?.data?.insurance_class === '') {\r\n                                const temp = { ...errors };\r\n                                temp['insuranceClass'] = true;\r\n                                setErrors(temp)\r\n                            } else {\r\n                                const temp = { ...errors };\r\n                                temp['insuranceClass'] = false;\r\n                                setErrors(temp)\r\n                            }\r\n                        }}\r\n                        // onBlur={(e: any) => {\r\n                        //     // props.insuranceUpdate(props.data?.label, e.target.value)\r\n                        //     // setInputData(e.target.value)\r\n                        // }}\r\n                        value={props?.data?.insurance_class}\r\n                        error={errors['insuranceClass']}\r\n                        //   helperText={formik.touched.iban && formik.errors.iban}\r\n                        size='small'\r\n                        required\r\n                        InputProps={{\r\n                         readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                        <LabelWithIcon label={'Class Benefits'} />\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"classBenefits\"\r\n                        placeholder=\"-Network name VVIP&\r\n                        -Max limit SAR 500,000\r\n                        -out patient 20% MAX 75\r\n                        -Room REG SUIT \r\n                        -Dental SAR 2,000\r\n                        -Optical SAR 400\r\n                        -Matenity SAR 15,000\"\r\n                        className={classes.classBenefits}\r\n                        onChange={(e: any) => {\r\n                            props.addClassBenefitsData(e.target.value)\r\n\r\n                            if (props?.data?.class_benefits === '') {\r\n                                const temp = { ...errors };\r\n                                temp['classBenefits'] = true;\r\n                                setErrors(temp)\r\n                            } else {\r\n                                const temp = { ...errors };\r\n                                temp['classBenefits'] = false;\r\n                                setErrors(temp)\r\n                            }\r\n                        }}\r\n                        value={props?.data?.class_benefits}\r\n                        error={errors['classBenefits']}\r\n                        // onBlur={(e: any) => {\r\n                        //     // props.insuranceUpdate(props.data?.label, e.target.value)\r\n                        //     // setInputData(e.target.value)\r\n                        // }}\r\n                        size='small'\r\n                        multiline\r\n                        required\r\n                        rows={7}\r\n                        InputProps={{\r\n                         readOnly: props.formType === enumFormAction.EDIT || props.formType === enumFormAction.ADD ? false : true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicalInsurance"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}